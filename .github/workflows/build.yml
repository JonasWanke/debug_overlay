name: Build & Lint

on:
  push:
  pull_request:
  schedule:
    - cron: "0 4 * * *"

env:
  JAVA_VERSION: 12.x
  FLUTTER_CHANNEL: stable

jobs:
  install:
    name: Install Flutter and dependencies
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v1

      - name: Install Java
        uses: actions/setup-java@v1
        with:
          java-version: ${{ env.JAVA_VERSION }}
      - name: Install Flutter
        uses: subosito/flutter-action@v1
        with:
          channel: ${{ env.FLUTTER_CHANNEL }}

      - name: Install dependencies
        run: flutter pub get

      - name: Persist current state
        uses: actions/upload-artifact@v1
        with:
          name: source
          path: .

  lint:
    name: Lint
    needs: install
    runs-on: ubuntu-latest
    steps:
      - name: Install Java
        uses: actions/setup-java@v1
        with:
          java-version: ${{ env.JAVA_VERSION }}
      - name: Install Flutter
        uses: subosito/flutter-action@v1
        with:
          channel: ${{ env.FLUTTER_CHANNEL }}

      - name: Checkout source
        uses: actions/download-artifact@v2
        with:
          name: source

      - name: Install dependencies
        run: flutter pub get

      - name: Run linter
        run: flutter analyze > flutter_analyze_report.txt
        continue-on-error: true

      - name: Install ruby
        uses: actions/setup-ruby@v1
        if: github.event_name == 'pull_request'
        with:
          ruby-version: "2.6"
      - name: Install ruby gems
        run: |
          gem install bundler
          bundle install --without documentation
        if: github.event_name == 'pull_request'
      - name: Run danger on generated report
        uses: MeilCli/danger-action@v1
        if: github.event_name == 'pull_request'
        with:
          danger_file: Dangerfile
          danger_id: "danger-pr"
        env:
          DANGER_GITHUB_API_TOKEN: ${{ secrets.BOT_TOKEN }}

  build-example:
    name: Build example
    needs: install
    runs-on: ubuntu-latest
    steps:
      - name: Install Java
        uses: actions/setup-java@v1
        with:
          java-version: ${{ env.JAVA_VERSION }}
      - name: Install Flutter
        uses: subosito/flutter-action@v1
        with:
          channel: ${{ env.FLUTTER_CHANNEL }}

      - name: Checkout source
        uses: actions/download-artifact@v2
        with:
          name: source

      - name: Install dependencies
        run: flutter pub get

      - name: Build APK
        run: flutter build apk
        working-directory: example

      - name: Upload APK as artifact
        uses: actions/upload-artifact@v2
        with:
          name: example-apk
          path: example/build/app/outputs/apk/release/app-release.apk
