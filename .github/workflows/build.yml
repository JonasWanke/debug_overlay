name: Build & Lint

on:
  pull_request:
  push:
  schedule:
    - cron: '0 4 * * *'

env:
  JAVA_VERSION: 12.x
  FLUTTER_CHANNEL: beta

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          distribution: zulu
          java-version: ${{ env.JAVA_VERSION }}
      - name: Install Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: ${{ env.FLUTTER_CHANNEL }}

      - run: flutter pub get

      - name: Run linter
        run: flutter analyze > flutter_analyze_report.txt
        continue-on-error: ${{ github.event_name == 'pull_request' }}

      - uses: actions/setup-ruby@v1
        if: github.event_name == 'pull_request'
        with:
          ruby-version: '2.6'
      - name: Install ruby gems
        run: |
          gem install bundler
          bundle config set without 'documentation'
          bundle install
        if: github.event_name == 'pull_request'
      - name: Run danger on generated report
        run: |
          gem install danger --version ">= 6.0.0"
          danger --dangerfile=Dangerfile --danger_id="danger-pr"
        if: github.event_name == 'pull_request'
        env:
          DANGER_GITHUB_API_TOKEN: ${{ secrets.BOT_TOKEN }}

  build-example:
    name: Build example
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          distribution: zulu
          java-version: ${{ env.JAVA_VERSION }}
      - name: Install Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: ${{ env.FLUTTER_CHANNEL }}

      - run: flutter pub get
        working-directory: example

      - run: flutter build apk
        working-directory: example

      - name: Upload APK as artifact
        uses: actions/upload-artifact@v3
        with:
          name: example-apk
          path: example/build/app/outputs/apk/release/app-release.apk
